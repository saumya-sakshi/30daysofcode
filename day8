Dam of Candies (Level — Medium)
Geek wants to make a special space for candies on his bookshelf. Currently, it has N books of different heights and unit width. Help him select 2 books such that he can store maximum candies between them by removing all the other books from between the selected books. The task is to find out the area between 2 books that can hold the maximum candies without changing the original position of selected books.

Example-1
Input: N = 3, height[] = {1, 3, 4}
Output: 1
Explanation:
1. Area between book of height 1 and book of height 3 is 0 as there is no space between them.
2. Area between book of height 1 and book of height 4 is 1 by removing book of height 3.
3. Area between book of height 3 and book of height 4 is 0 as there is no space between them.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 10⁵

Solution Code:

class Solution 
{ 
	static int maxCandy(int arr[], int n) 
	{ 
	   int i =0;
	   int j =n-1;
	   int ans=0;
	   while(i<j){
	       if(arr[i]<arr[j]){
	           ans = Math.max(ans,(j-i-1)*arr[i]);
	           i++;
	       }
	       if(arr[i]>arr[j]){
	           ans=Math.max(ans,(j-i-1)*arr[j]);
	           j--;
	       }
	       if(arr[i]==arr[j]){
	           ans=Math.max(ans,(j-i-1)*arr[i]);
	           i++;
	           j--;
	       }
	   }
 
        
        return ans;
	}
}
